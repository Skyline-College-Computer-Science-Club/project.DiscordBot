# coding: utf-8

"""
    SMCCD Directory API

    This is SMCCD Directory API documentation. The API requires basic authentication username and password pair to access the data.  # noqa: E501

    OpenAPI spec version: v1.1
    Contact: apiteam@smccd.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ApiResponseLinks(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_self': 'ApiResponseLinksSelf',
        'skyline': 'ApiResponseLinksSkyline',
        'canada': 'ApiResponseLinksCanada',
        'csm': 'ApiResponseLinksCsm',
        'district': 'ApiResponseLinksDistrict'
    }

    attribute_map = {
        '_self': 'self',
        'skyline': 'skyline',
        'canada': 'canada',
        'csm': 'csm',
        'district': 'district'
    }

    def __init__(self, _self=None, skyline=None, canada=None, csm=None, district=None):  # noqa: E501
        """ApiResponseLinks - a model defined in Swagger"""  # noqa: E501
        self.__self = None
        self._skyline = None
        self._canada = None
        self._csm = None
        self._district = None
        self.discriminator = None
        if _self is not None:
            self._self = _self
        if skyline is not None:
            self.skyline = skyline
        if canada is not None:
            self.canada = canada
        if csm is not None:
            self.csm = csm
        if district is not None:
            self.district = district

    @property
    def _self(self):
        """Gets the _self of this ApiResponseLinks.  # noqa: E501


        :return: The _self of this ApiResponseLinks.  # noqa: E501
        :rtype: ApiResponseLinksSelf
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ApiResponseLinks.


        :param _self: The _self of this ApiResponseLinks.  # noqa: E501
        :type: ApiResponseLinksSelf
        """

        self.__self = _self

    @property
    def skyline(self):
        """Gets the skyline of this ApiResponseLinks.  # noqa: E501


        :return: The skyline of this ApiResponseLinks.  # noqa: E501
        :rtype: ApiResponseLinksSkyline
        """
        return self._skyline

    @skyline.setter
    def skyline(self, skyline):
        """Sets the skyline of this ApiResponseLinks.


        :param skyline: The skyline of this ApiResponseLinks.  # noqa: E501
        :type: ApiResponseLinksSkyline
        """

        self._skyline = skyline

    @property
    def canada(self):
        """Gets the canada of this ApiResponseLinks.  # noqa: E501


        :return: The canada of this ApiResponseLinks.  # noqa: E501
        :rtype: ApiResponseLinksCanada
        """
        return self._canada

    @canada.setter
    def canada(self, canada):
        """Sets the canada of this ApiResponseLinks.


        :param canada: The canada of this ApiResponseLinks.  # noqa: E501
        :type: ApiResponseLinksCanada
        """

        self._canada = canada

    @property
    def csm(self):
        """Gets the csm of this ApiResponseLinks.  # noqa: E501


        :return: The csm of this ApiResponseLinks.  # noqa: E501
        :rtype: ApiResponseLinksCsm
        """
        return self._csm

    @csm.setter
    def csm(self, csm):
        """Sets the csm of this ApiResponseLinks.


        :param csm: The csm of this ApiResponseLinks.  # noqa: E501
        :type: ApiResponseLinksCsm
        """

        self._csm = csm

    @property
    def district(self):
        """Gets the district of this ApiResponseLinks.  # noqa: E501


        :return: The district of this ApiResponseLinks.  # noqa: E501
        :rtype: ApiResponseLinksDistrict
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this ApiResponseLinks.


        :param district: The district of this ApiResponseLinks.  # noqa: E501
        :type: ApiResponseLinksDistrict
        """

        self._district = district

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiResponseLinks, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiResponseLinks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
